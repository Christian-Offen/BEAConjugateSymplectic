import numpy as np

def ode0(z,UJet,a):

	# first order formulation of ODE
	
	# z = [u0,u1,ud0,ud1]
	u = z[:2]
	ud = z[2:]
	
	U = np.zeros((2,2))
	
	U[1,0] = UJet[1][0](u)
	U[0,1] = UJet[0][1](u)

	r = np.array([U[1,0],U[0,1]])

	return np.concatenate([ud,r])


def ode2(z,UJet,a,h):

	# first order formulation of modified ODE 2
	
	u = z[:2]
	ud = z[2:]

	U = np.zeros((4,4))

	U[1,0] = UJet[1][0](u)
	U[0,1] = UJet[0][1](u)

	U[0,2] = UJet[0][2](u)
	U[0,3] = UJet[0][3](u)
	
	U[1,1] = UJet[1][1](u)
	U[1,2] = UJet[1][2](u)

	U[2,1] = UJet[2][1](u)

	U[3,0] = UJet[3][0](u)

	xd1 = ud[0]
	xd2 = ud[1]

	rhs = np.array([(3*a[1,2]*(U[0,1]*U[0,2] + xd2**2*U[0,3] + U[1,0]*U[1,1] + 2*xd1*xd2*U[1,2] + xd1**2*U[2,1]) + 
	(-4 + 3*a[1,1])*(U[0,1]*U[1,1] + xd2**2*U[1,2] + U[1,0]*U[2,0] + 2*xd1*xd2*U[2,1] + xd1**2*U[3,0]))/12.,
	(-4*(U[0,1]*U[0,2] + xd2**2*U[0,3] + U[1,0]*U[1,1] + 2*xd1*xd2*U[1,2] + xd1**2*U[2,1]) + 
	3*a[2,2]*(U[0,1]*U[0,2] + xd2**2*U[0,3] + U[1,0]*U[1,1] + 2*xd1*xd2*U[1,2] + xd1**2*U[2,1]) + 
	3*a[1,2]*(U[0,1]*U[1,1] + xd2**2*U[1,2] + U[1,0]*U[2,0] + 2*xd1*xd2*U[2,1] + xd1**2*U[3,0]))/12.])

	r = ode0(z,UJet,a)[2:] + h**2*rhs

	return np.concatenate([ud,r])


def ode4(z,UJet,a,h):

	# first order formulation of modified ODE 4
	
	u = z[:2]
	ud = z[2:]
	
	
	U = np.zeros((6,6))


	U[0,1] = UJet[0][1](u)
	U[0,2] = UJet[0][2](u)
	U[0,3] = UJet[0][3](u)
	U[0,4] = UJet[0][4](u)
	U[0,5] = UJet[0][5](u)

	U[1,0] = UJet[1][0](u)	
	U[1,1] = UJet[1][1](u)
	U[1,2] = UJet[1][2](u)
	U[1,3] = UJet[1][3](u)
	U[1,4] = UJet[1][4](u)

	U[2,0] = UJet[2][0](u)
	U[2,1] = UJet[2][1](u)
	U[2,2] = UJet[2][2](u)
	U[2,3] = UJet[2][3](u)
	
	U[3,0] = UJet[3][0](u)
	U[3,1] = UJet[3][1](u)
	U[3,2] = UJet[3][2](u)
	
	U[4,0] = UJet[4][0](u)
	U[4,1] = UJet[4][1](u)

	U[5,0] = UJet[5][0](u)

	xd1 = ud[0]
	xd2 = ud[1]


	rhs =     np.array([(128*xd2**2*U[0,3]*U[1,1] - 150*xd2**2*a[1,1]*U[0,3]*U[1,1] + 45*xd2**2*a[1,1]**2*U[0,3]*U[1,1] - 60*xd2**2*a[2,2]*U[0,3]*U[1,1] + 
	45*xd2**2*a[1,1]*a[2,2]*U[0,3]*U[1,1] + 128*U[1,0]*U[1,1]**2 - 150*a[1,1]*U[1,0]*U[1,1]**2 + 45*a[1,1]**2*U[1,0]*U[1,1]**2 - 60*a[2,2]*U[1,0]*U[1,1]**2 + 
	45*a[1,1]*a[2,2]*U[1,0]*U[1,1]**2 + 9*(16 - 30*a[1,1] + 15*a[1,1]**2)*U[0,1]**2*U[1,2] + 192*xd2**2*U[0,2]*U[1,2] - 360*xd2**2*a[1,1]*U[0,2]*U[1,2] + 
	180*xd2**2*a[1,1]**2*U[0,2]*U[1,2] + 448*xd1*xd2*U[1,1]*U[1,2] - 660*xd1*xd2*a[1,1]*U[1,1]*U[1,2] + 270*xd1*xd2*a[1,1]**2*U[1,1]*U[1,2] - 
	120*xd1*xd2*a[2,2]*U[1,1]*U[1,2] + 90*xd1*xd2*a[1,1]*a[2,2]*U[1,1]*U[1,2] + 48*xd2**4*U[1,4] - 90*xd2**4*a[1,1]*U[1,4] + 45*xd2**4*a[1,1]**2*U[1,4] + 
	128*xd2**2*U[1,2]*U[2,0] - 210*xd2**2*a[1,1]*U[1,2]*U[2,0] + 90*xd2**2*a[1,1]**2*U[1,2]*U[2,0] + 128*U[1,0]*U[2,0]**2 - 210*a[1,1]*U[1,0]*U[2,0]**2 + 
	90*a[1,1]**2*U[1,0]*U[2,0]**2 + 192*xd1*xd2*U[0,2]*U[2,1] - 360*xd1*xd2*a[1,1]*U[0,2]*U[2,1] + 180*xd1*xd2*a[1,1]**2*U[0,2]*U[2,1] + 
	320*xd1**2*U[1,1]*U[2,1] + 192*xd2**2*U[1,1]*U[2,1] - 510*xd1**2*a[1,1]*U[1,1]*U[2,1] - 360*xd2**2*a[1,1]*U[1,1]*U[2,1] + 
	225*xd1**2*a[1,1]**2*U[1,1]*U[2,1] + 180*xd2**2*a[1,1]**2*U[1,1]*U[2,1] - 60*xd1**2*a[2,2]*U[1,1]*U[2,1] + 45*xd1**2*a[1,1]*a[2,2]*U[1,1]*U[2,1] + 
	448*xd1*xd2*U[2,0]*U[2,1] - 780*xd1*xd2*a[1,1]*U[2,0]*U[2,1] + 360*xd1*xd2*a[1,1]**2*U[2,0]*U[2,1] + 288*xd2**2*U[1,0]*U[2,2] - 
	540*xd2**2*a[1,1]*U[1,0]*U[2,2] + 270*xd2**2*a[1,1]**2*U[1,0]*U[2,2] + 192*xd1*xd2**3*U[2,3] - 360*xd1*xd2**3*a[1,1]*U[2,3] + 
	180*xd1*xd2**3*a[1,1]**2*U[2,3] + 144*U[1,0]**2*U[3,0] - 270*a[1,1]*U[1,0]**2*U[3,0] + 135*a[1,1]**2*U[1,0]**2*U[3,0] + 192*xd1*xd2*U[1,1]*U[3,0] - 
	360*xd1*xd2*a[1,1]*U[1,1]*U[3,0] + 180*xd1*xd2*a[1,1]**2*U[1,1]*U[3,0] + 320*xd1**2*U[2,0]*U[3,0] - 570*xd1**2*a[1,1]*U[2,0]*U[3,0] + 
	270*xd1**2*a[1,1]**2*U[2,0]*U[3,0] + 576*xd1*xd2*U[1,0]*U[3,1] - 1080*xd1*xd2*a[1,1]*U[1,0]*U[3,1] + 540*xd1*xd2*a[1,1]**2*U[1,0]*U[3,1] + 
	U[0,1]*((128 + 45*a[1,1]**2 - 60*a[2,2] + 15*a[1,1]*(-10 + 3*a[2,2]))*U[0,2]*U[1,1] + 
	2*(9*xd2**2*(16 - 30*a[1,1] + 15*a[1,1]**2)*U[1,3] + (64 - 105*a[1,1] + 45*a[1,1]**2)*U[1,1]*U[2,0] + 
	18*xd1*xd2*(16 - 30*a[1,1] + 15*a[1,1]**2)*U[2,2] + 9*(16 - 30*a[1,1] + 15*a[1,1]**2)*(U[1,0]*U[2,1] + xd1**2*U[3,1]))) + 288*xd1**2*xd2**2*U[3,2] - 
	540*xd1**2*xd2**2*a[1,1]*U[3,2] + 270*xd1**2*xd2**2*a[1,1]**2*U[3,2] + 288*xd1**2*U[1,0]*U[4,0] - 540*xd1**2*a[1,1]*U[1,0]*U[4,0] + 
	270*xd1**2*a[1,1]**2*U[1,0]*U[4,0] + 192*xd1**3*xd2*U[4,1] - 360*xd1**3*xd2*a[1,1]*U[4,1] + 180*xd1**3*xd2*a[1,1]**2*U[4,1] + 
	15*a[1,2]*(9*(-2 + a[1,1] + a[2,2])*U[0,1]**2*U[0,3] + 3*xd2**4*(-2 + a[1,1] + a[2,2])*U[0,5] - 10*U[0,2]*U[1,0]*U[1,1] + 3*a[1,1]*U[0,2]*U[1,0]*U[1,1] + 
	6*a[2,2]*U[0,2]*U[1,0]*U[1,1] - 24*xd1**2*U[1,1]*U[1,2] + 12*xd1**2*a[1,1]*U[1,1]*U[1,2] + 12*xd1**2*a[2,2]*U[1,1]*U[1,2] + 
	12*xd1*xd2**3*(-2 + a[1,1] + a[2,2])*U[1,4] - 18*U[1,0]*U[1,1]*U[2,0] + 12*a[1,1]*U[1,0]*U[1,1]*U[2,0] + 3*a[2,2]*U[1,0]*U[1,1]*U[2,0] - 
	10*xd1**2*U[0,2]*U[2,1] + 3*xd1**2*a[1,1]*U[0,2]*U[2,1] + 6*xd1**2*a[2,2]*U[0,2]*U[2,1] - 18*U[1,0]**2*U[2,1] + 9*a[1,1]*U[1,0]**2*U[2,1] + 
	9*a[2,2]*U[1,0]**2*U[2,1] - 28*xd1**2*U[2,0]*U[2,1] + 15*xd1**2*a[1,1]*U[2,0]*U[2,1] + 12*xd1**2*a[2,2]*U[2,0]*U[2,1] + 
	U[0,1]*((-10 + 3*a[1,1] + 6*a[2,2])*U[0,2]**2 + 18*xd2**2*(-2 + a[1,1] + a[2,2])*U[0,4] - 14*U[1,1]**2 + 9*a[1,1]*U[1,1]**2 + 3*a[2,2]*U[1,1]**2 - 
	36*U[1,0]*U[1,2] + 18*a[1,1]*U[1,0]*U[1,2] + 18*a[2,2]*U[1,0]*U[1,2] + 36*xd1*xd2*(-2 + a[1,1] + a[2,2])*U[1,3] + (-4 + 3*a[1,1])*U[0,2]*U[2,0] - 
	36*xd1**2*U[2,2] + 18*xd1**2*a[1,1]*U[2,2] + 18*xd1**2*a[2,2]*U[2,2]) + 
	xd2**2*((-34 + 15*a[1,1] + 18*a[2,2])*U[0,2]*U[0,3] + (-38 + 21*a[1,1] + 15*a[2,2])*U[1,1]*U[1,2] - 36*U[1,0]*U[1,3] + 18*a[1,1]*U[1,0]*U[1,3] + 
	18*a[2,2]*U[1,0]*U[1,3] - 4*U[0,3]*U[2,0] + 3*a[1,1]*U[0,3]*U[2,0] - 36*xd1**2*U[2,3] + 18*xd1**2*a[1,1]*U[2,3] + 18*xd1**2*a[2,2]*U[2,3]) - 
	14*xd1**2*U[1,1]*U[3,0] + 9*xd1**2*a[1,1]*U[1,1]*U[3,0] + 3*xd1**2*a[2,2]*U[1,1]*U[3,0] - 36*xd1**2*U[1,0]*U[3,1] + 18*xd1**2*a[1,1]*U[1,0]*U[3,1] + 
	18*xd1**2*a[2,2]*U[1,0]*U[3,1] + 2*xd1*xd2*(6*(-2 + a[1,1] + a[2,2])*U[0,3]*U[1,1] + (-22 + 9*a[1,1] + 12*a[2,2])*U[0,2]*U[1,2] - 16*U[1,2]*U[2,0] + 
	9*a[1,1]*U[1,2]*U[2,0] + 6*a[2,2]*U[1,2]*U[2,0] - 26*U[1,1]*U[2,1] + 15*a[1,1]*U[1,1]*U[2,1] + 9*a[2,2]*U[1,1]*U[2,1] - 36*U[1,0]*U[2,2] + 
	18*a[1,1]*U[1,0]*U[2,2] + 18*a[2,2]*U[1,0]*U[2,2] - 12*xd1**2*U[3,2] + 6*xd1**2*a[1,1]*U[3,2] + 6*xd1**2*a[2,2]*U[3,2]) - 6*xd1**4*U[4,1] + 
	3*xd1**4*a[1,1]*U[4,1] + 3*xd1**4*a[2,2]*U[4,1]) + 48*xd1**4*U[5,0] - 90*xd1**4*a[1,1]*U[5,0] + 45*xd1**4*a[1,1]**2*U[5,0] + 
	45*a[1,2]**2*(2*U[1,0]*U[1,1]**2 + 3*U[0,1]**2*U[1,2] + xd2**4*U[1,4] + U[0,2]*U[1,0]*U[2,0] + U[1,0]*U[2,0]**2 + 6*xd1**2*U[1,1]*U[2,1] + 
	4*xd1*xd2**3*U[2,3] + xd1**2*U[0,2]*U[3,0] + 3*U[1,0]**2*U[3,0] + 5*xd1**2*U[2,0]*U[3,0] + 
	U[0,1]*(3*U[0,2]*U[1,1] + 6*xd2**2*U[1,3] + U[1,1]*U[2,0] + 6*U[1,0]*U[2,1] + 12*xd1*xd2*U[2,2] + 6*xd1**2*U[3,1]) + 
	xd2**2*(2*U[0,3]*U[1,1] + 5*U[0,2]*U[1,2] + U[1,2]*U[2,0] + 4*U[1,1]*U[2,1] + 6*U[1,0]*U[2,2] + 6*xd1**2*U[3,2]) + 6*xd1**2*U[1,0]*U[4,0] + 
	2*xd1*xd2*(3*U[0,2]*U[2,1] + 3*U[2,0]*U[2,1] + 2*U[1,1]*(2*U[1,2] + U[3,0]) + 6*U[1,0]*U[3,1] + 2*xd1**2*U[4,1]) + xd1**4*U[5,0]))/720.,
	(128*U[0,2]*U[1,0]*U[1,1] + 45*a[1,2]**2*U[0,2]*U[1,0]*U[1,1] - 210*a[2,2]*U[0,2]*U[1,0]*U[1,1] + 90*a[2,2]**2*U[0,2]*U[1,0]*U[1,1] - 
	210*a[1,2]*U[1,0]*U[1,1]**2 + 45*a[1,1]*a[1,2]*U[1,0]*U[1,1]**2 + 135*a[1,2]*a[2,2]*U[1,0]*U[1,1]**2 + 192*xd1**2*U[1,1]*U[1,2] + 
	180*xd1**2*a[1,2]**2*U[1,1]*U[1,2] - 360*xd1**2*a[2,2]*U[1,1]*U[1,2] + 180*xd1**2*a[2,2]**2*U[1,1]*U[1,2] + 
	9*U[0,1]**2*((16 + 15*a[1,2]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[0,3] + 15*a[1,2]*(-2 + a[1,1] + a[2,2])*U[1,2]) + 
	xd2**4*((48 + 45*a[1,2]**2 - 90*a[2,2] + 45*a[2,2]**2)*U[0,5] + 45*a[1,2]*(-2 + a[1,1] + a[2,2])*U[1,4]) - 60*a[1,2]*U[0,2]*U[1,0]*U[2,0] + 
	45*a[1,2]*a[2,2]*U[0,2]*U[1,0]*U[2,0] + 128*U[1,0]*U[1,1]*U[2,0] - 60*a[1,1]*U[1,0]*U[1,1]*U[2,0] + 135*a[1,2]**2*U[1,0]*U[1,1]*U[2,0] - 
	150*a[2,2]*U[1,0]*U[1,1]*U[2,0] + 45*a[1,1]*a[2,2]*U[1,0]*U[1,1]*U[2,0] + 45*a[2,2]**2*U[1,0]*U[1,1]*U[2,0] - 150*a[1,2]*U[1,0]*U[2,0]**2 + 
	90*a[1,1]*a[1,2]*U[1,0]*U[2,0]**2 + 45*a[1,2]*a[2,2]*U[1,0]*U[2,0]**2 + 128*xd1**2*U[0,2]*U[2,1] + 45*xd1**2*a[1,2]**2*U[0,2]*U[2,1] - 
	210*xd1**2*a[2,2]*U[0,2]*U[2,1] + 90*xd1**2*a[2,2]**2*U[0,2]*U[2,1] + 144*U[1,0]**2*U[2,1] + 135*a[1,2]**2*U[1,0]**2*U[2,1] - 270*a[2,2]*U[1,0]**2*U[2,1] + 
	135*a[2,2]**2*U[1,0]**2*U[2,1] - 570*xd1**2*a[1,2]*U[1,1]*U[2,1] + 225*xd1**2*a[1,1]*a[1,2]*U[1,1]*U[2,1] + 315*xd1**2*a[1,2]*a[2,2]*U[1,1]*U[2,1] + 
	192*xd1**2*U[2,0]*U[2,1] + 225*xd1**2*a[1,2]**2*U[2,0]*U[2,1] - 360*xd1**2*a[2,2]*U[2,0]*U[2,1] + 180*xd1**2*a[2,2]**2*U[2,0]*U[2,1] + 
	12*xd1*xd2**3*((16 + 15*a[1,2]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[1,4] + 15*a[1,2]*(-2 + a[1,1] + a[2,2])*U[2,3]) - 60*xd1**2*a[1,2]*U[0,2]*U[3,0] + 
	45*xd1**2*a[1,2]*a[2,2]*U[0,2]*U[3,0] - 270*a[1,2]*U[1,0]**2*U[3,0] + 135*a[1,1]*a[1,2]*U[1,0]**2*U[3,0] + 135*a[1,2]*a[2,2]*U[1,0]**2*U[3,0] + 
	128*xd1**2*U[1,1]*U[3,0] - 60*xd1**2*a[1,1]*U[1,1]*U[3,0] + 90*xd1**2*a[1,2]**2*U[1,1]*U[3,0] - 150*xd1**2*a[2,2]*U[1,1]*U[3,0] + 
	45*xd1**2*a[1,1]*a[2,2]*U[1,1]*U[3,0] + 45*xd1**2*a[2,2]**2*U[1,1]*U[3,0] - 510*xd1**2*a[1,2]*U[2,0]*U[3,0] + 270*xd1**2*a[1,1]*a[1,2]*U[2,0]*U[3,0] + 
	225*xd1**2*a[1,2]*a[2,2]*U[2,0]*U[3,0] + 288*xd1**2*U[1,0]*U[3,1] + 270*xd1**2*a[1,2]**2*U[1,0]*U[3,1] - 540*xd1**2*a[2,2]*U[1,0]*U[3,1] + 
	270*xd1**2*a[2,2]**2*U[1,0]*U[3,1] + U[0,1]*((128 + 45*a[1,2]**2 - 210*a[2,2] + 90*a[2,2]**2)*U[0,2]**2 + 128*U[1,1]**2 - 60*a[1,1]*U[1,1]**2 + 
	90*a[1,2]**2*U[1,1]**2 - 150*a[2,2]*U[1,1]**2 + 45*a[1,1]*a[2,2]*U[1,1]**2 + 45*a[2,2]**2*U[1,1]**2 + 288*U[1,0]*U[1,2] + 270*a[1,2]**2*U[1,0]*U[1,2] - 
	540*a[2,2]*U[1,0]*U[1,2] + 270*a[2,2]**2*U[1,0]*U[1,2] + 
	18*xd2**2*((16 + 15*a[1,2]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[0,4] + 15*a[1,2]*(-2 + a[1,1] + a[2,2])*U[1,3]) - 150*a[1,2]*U[1,1]*U[2,0] + 
	90*a[1,1]*a[1,2]*U[1,1]*U[2,0] + 45*a[1,2]*a[2,2]*U[1,1]*U[2,0] + 45*a[1,2]*U[0,2]*((-6 + a[1,1] + 4*a[2,2])*U[1,1] + a[1,2]*U[2,0]) - 
	540*a[1,2]*U[1,0]*U[2,1] + 270*a[1,1]*a[1,2]*U[1,0]*U[2,1] + 270*a[1,2]*a[2,2]*U[1,0]*U[2,1] + 288*xd1**2*U[2,2] + 270*xd1**2*a[1,2]**2*U[2,2] - 
	540*xd1**2*a[2,2]*U[2,2] + 270*xd1**2*a[2,2]**2*U[2,2] + 
	36*xd1*xd2*((16 + 15*a[1,2]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[1,3] + 15*a[1,2]*(-2 + a[1,1] + a[2,2])*U[2,2]) - 540*xd1**2*a[1,2]*U[3,1] + 
	270*xd1**2*a[1,1]*a[1,2]*U[3,1] + 270*xd1**2*a[1,2]*a[2,2]*U[3,1]) + 
	xd2**2*(320*U[1,1]*U[1,2] - 60*a[1,1]*U[1,1]*U[1,2] - 510*a[2,2]*U[1,1]*U[1,2] + 45*a[1,1]*a[2,2]*U[1,1]*U[1,2] + 225*a[2,2]**2*U[1,1]*U[1,2] + 
	5*U[0,2]*((64 + 45*a[1,2]**2 - 114*a[2,2] + 54*a[2,2]**2)*U[0,3] + 3*a[1,2]*(-28 + 12*a[1,1] + 15*a[2,2])*U[1,2]) + 288*U[1,0]*U[1,3] - 
	540*a[2,2]*U[1,0]*U[1,3] + 270*a[2,2]**2*U[1,0]*U[1,3] + 288*xd1**2*U[2,3] - 540*xd1**2*a[2,2]*U[2,3] + 270*xd1**2*a[2,2]**2*U[2,3] + 
	45*a[1,2]**2*(6*U[1,1]*U[1,2] + 6*U[1,0]*U[1,3] + U[0,3]*U[2,0] + 6*xd1**2*U[2,3]) + 
	15*a[1,2]*((-14 + 3*a[1,1] + 9*a[2,2])*U[0,3]*U[1,1] + (-10 + 6*a[1,1] + 3*a[2,2])*U[1,2]*U[2,0] + 
	6*(-2 + a[1,1] + a[2,2])*(2*U[1,1]*U[2,1] + 3*U[1,0]*U[2,2] + 3*xd1**2*U[3,2]))) - 540*xd1**2*a[1,2]*U[1,0]*U[4,0] + 
	270*xd1**2*a[1,1]*a[1,2]*U[1,0]*U[4,0] + 270*xd1**2*a[1,2]*a[2,2]*U[1,0]*U[4,0] + 48*xd1**4*U[4,1] + 45*xd1**4*a[1,2]**2*U[4,1] - 90*xd1**4*a[2,2]*U[4,1] + 
	45*xd1**4*a[2,2]**2*U[4,1] + 2*xd1*xd2*(6*(16 + 15*a[1,2]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[0,3]*U[1,1] - 390*a[1,2]*U[1,1]*U[1,2] + 
	135*a[1,1]*a[1,2]*U[1,1]*U[1,2] + 225*a[1,2]*a[2,2]*U[1,1]*U[1,2] + 96*U[1,2]*U[2,0] + 135*a[1,2]**2*U[1,2]*U[2,0] - 180*a[2,2]*U[1,2]*U[2,0] + 
	90*a[2,2]**2*U[1,2]*U[2,0] + 224*U[1,1]*U[2,1] - 60*a[1,1]*U[1,1]*U[2,1] + 180*a[1,2]**2*U[1,1]*U[2,1] - 330*a[2,2]*U[1,1]*U[2,1] + 
	45*a[1,1]*a[2,2]*U[1,1]*U[2,1] + 135*a[2,2]**2*U[1,1]*U[2,1] - 330*a[1,2]*U[2,0]*U[2,1] + 180*a[1,1]*a[1,2]*U[2,0]*U[2,1] + 
	135*a[1,2]*a[2,2]*U[2,0]*U[2,1] + U[0,2]*((224 + 135*a[1,2]**2 - 390*a[2,2] + 180*a[2,2]**2)*U[1,2] + 15*a[1,2]*(-16 + 6*a[1,1] + 9*a[2,2])*U[2,1]) + 
	288*U[1,0]*U[2,2] + 270*a[1,2]**2*U[1,0]*U[2,2] - 540*a[2,2]*U[1,0]*U[2,2] + 270*a[2,2]**2*U[1,0]*U[2,2] - 180*a[1,2]*U[1,1]*U[3,0] + 
	90*a[1,1]*a[1,2]*U[1,1]*U[3,0] + 90*a[1,2]*a[2,2]*U[1,1]*U[3,0] - 540*a[1,2]*U[1,0]*U[3,1] + 270*a[1,1]*a[1,2]*U[1,0]*U[3,1] + 
	270*a[1,2]*a[2,2]*U[1,0]*U[3,1] + 96*xd1**2*U[3,2] + 90*xd1**2*a[1,2]**2*U[3,2] - 180*xd1**2*a[2,2]*U[3,2] + 90*xd1**2*a[2,2]**2*U[3,2] - 
	180*xd1**2*a[1,2]*U[4,1] + 90*xd1**2*a[1,1]*a[1,2]*U[4,1] + 90*xd1**2*a[1,2]*a[2,2]*U[4,1]) - 90*xd1**4*a[1,2]*U[5,0] + 45*xd1**4*a[1,1]*a[1,2]*U[5,0] + 
	45*xd1**4*a[1,2]*a[2,2]*U[5,0])/720.])

	r = ode2(z,UJet,a,h)[2:] + h**4*rhs
	
	return np.concatenate([ud,r])


def Hmod(x,UJet,a,h):


	dx = (-x[4:]+8*x[3:-1]-8*x[1:-3]+x[:-4])/(12*h) 	# fourth oder finite differences
	dnrm2 = np.sum(dx**2,1)
	nrm2 = np.sum(x[2:-2]**2,1)

	u = np.transpose(x[2:-2])

	U = np.zeros((6,6,u.shape[1]))

	U[0,0] = UJet[0][0](u)

	U[0,1] = UJet[0][1](u)
	U[0,2] = UJet[0][2](u)
	U[0,3] = UJet[0][3](u)
	U[0,4] = UJet[0][4](u)
	U[0,5] = UJet[0][5](u)

	U[1,0] = UJet[1][0](u)	
	U[1,1] = UJet[1][1](u)
	U[1,2] = UJet[1][2](u)
	U[1,3] = UJet[1][3](u)
	U[1,4] = UJet[1][4](u)

	U[2,0] = UJet[2][0](u)
	U[2,1] = UJet[2][1](u)
	U[2,2] = UJet[2][2](u)
	U[2,3] = UJet[2][3](u)

	U[3,0] = UJet[3][0](u)
	U[3,1] = UJet[3][1](u)
	U[3,2] = UJet[3][2](u)

	U[4,0] = UJet[4][0](u)
	U[4,1] = UJet[4][1](u)

	U[5,0] = UJet[5][0](u)

	xd1 = dx[:,0]
	xd2 = dx[:,1]


	H0 = 1/2*dnrm2 - U[0,0]

	H2diff=((-4 + 3*a[2,2])*U[0,1]**2 + 8*xd2**2*U[0,2] - 6*xd2**2*a[2,2]*U[0,2] + 6*a[1,2]*U[0,1]*U[1,0] - 4*U[1,0]**2 + 3*a[1,1]*U[1,0]**2 - 6*xd2**2*a[1,2]*U[1,1] + 
	xd1**2*(-6*a[1,2]*U[1,1] + 2*(4 - 3*a[1,1])*U[2,0]) - 2*xd1*xd2*(3*a[1,2]*U[0,2] + (-8 + 3*a[1,1] + 3*a[2,2])*U[1,1] + 3*a[1,2]*U[2,0]))/24.

	H2 = H0+h**2*H2diff

	H4diff=(90*xd1**2*a[1,2]*U[0,2]*U[1,1] - 45*xd1**2*a[1,1]*a[1,2]*U[0,2]*U[1,1] - 45*xd1**2*a[1,2]*a[2,2]*U[0,2]*U[1,1] - 90*a[1,2]*U[1,0]**2*U[1,1] + 
	45*a[1,1]*a[1,2]*U[1,0]**2*U[1,1] + 45*a[1,2]*a[2,2]*U[1,0]**2*U[1,1] - 32*xd1**2*U[1,1]**2 + 90*xd1**2*a[1,1]*U[1,1]**2 - 45*xd1**2*a[1,1]**2*U[1,1]**2 - 
	45*xd1**2*a[1,2]**2*U[1,1]**2 - 15*xd1**2*a[2,2]*U[1,1]**2 + 
	U[0,1]**2*((48 + 45*a[1,2]**2 - 90*a[2,2] + 45*a[2,2]**2)*U[0,2] + 45*a[1,2]*(-2 + a[1,1] + a[2,2])*U[1,1]) - 
	3*xd2**4*((16 + 15*a[1,2]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[0,4] + 15*a[1,2]*(-2 + a[1,1] + a[2,2])*U[1,3]) + 48*U[1,0]**2*U[2,0] - 
	90*a[1,1]*U[1,0]**2*U[2,0] + 45*a[1,1]**2*U[1,0]**2*U[2,0] + 45*a[1,2]**2*U[1,0]**2*U[2,0] + 60*xd1**2*a[1,2]*U[1,1]*U[2,0] - 
	45*xd1**2*a[1,1]*a[1,2]*U[1,1]*U[2,0] - 45*xd1**2*a[1,2]*a[2,2]*U[1,1]*U[2,0] - 32*xd1**2*U[2,0]**2 + 75*xd1**2*a[1,1]*U[2,0]**2 - 
	45*xd1**2*a[1,1]**2*U[2,0]**2 - 45*xd1**2*a[1,2]**2*U[2,0]**2 + 180*xd1**2*a[1,2]*U[1,0]*U[2,1] - 90*xd1**2*a[1,1]*a[1,2]*U[1,0]*U[2,1] - 
	90*xd1**2*a[1,2]*a[2,2]*U[1,0]*U[2,1] - 3*xd1*xd2**3*(60*a[1,2]**2*U[1,3] + (64 - 30*a[1,1] + 15*a[1,1]**2 - 90*a[2,2] + 45*a[2,2]**2)*U[1,3] + 
	15*a[1,2]*(-2 + a[1,1] + a[2,2])*(U[0,4] + 3*U[2,2])) - 96*xd1**2*U[1,0]*U[3,0] + 180*xd1**2*a[1,1]*U[1,0]*U[3,0] - 90*xd1**2*a[1,1]**2*U[1,0]*U[3,0] - 
	90*xd1**2*a[1,2]**2*U[1,0]*U[3,0] - 3*U[0,1]*(-32*U[1,0]*U[1,1] + 30*a[1,1]*U[1,0]*U[1,1] - 15*a[1,1]**2*U[1,0]*U[1,1] + 30*a[2,2]*U[1,0]*U[1,1] - 
	15*a[2,2]**2*U[1,0]*U[1,1] + xd2**2*((32 + 30*a[1,2]**2 - 60*a[2,2] + 30*a[2,2]**2)*U[0,3] + 30*a[1,2]*(-2 + a[1,1] + a[2,2])*U[1,2]) + 
	32*xd1**2*U[2,1] - 90*xd1**2*a[1,1]*U[2,1] + 45*xd1**2*a[1,1]**2*U[2,1] + 30*xd1**2*a[2,2]*U[2,1] - 15*xd1**2*a[2,2]**2*U[2,1] - 
	30*a[1,2]**2*(U[1,0]*U[1,1] - xd1**2*U[2,1]) + xd1*xd2*
	(60*a[1,2]**2*U[1,2] + (64 - 90*a[1,1] + 45*a[1,1]**2 - 30*a[2,2] + 15*a[2,2]**2)*U[1,2] + 15*a[1,2]*(-2 + a[1,1] + a[2,2])*(3*U[0,3] + U[2,1])) - 
	15*a[1,2]*(-2 + a[1,1] + a[2,2])*(U[0,2]*U[1,0] + U[1,0]*U[2,0] + xd1**2*(-3*U[1,2] + U[3,0]))) + 90*xd1**4*a[1,2]*U[3,1] - 
	45*xd1**4*a[1,1]*a[1,2]*U[3,1] - 45*xd1**4*a[1,2]*a[2,2]*U[3,1] - 
	xd2**2*((32 + 45*a[1,2]**2 - 75*a[2,2] + 45*a[2,2]**2)*U[0,2]**2 + 15*a[1,2]*(-4 + 3*a[1,1] + 3*a[2,2])*U[0,2]*U[1,1] + 32*U[1,1]**2 + 15*a[1,1]*U[1,1]**2 - 
	90*a[2,2]*U[1,1]**2 + 45*a[2,2]**2*U[1,1]**2 + 96*U[1,0]*U[1,2] + 90*a[1,1]*U[1,0]*U[1,2] - 45*a[1,1]**2*U[1,0]*U[1,2] - 270*a[2,2]*U[1,0]*U[1,2] + 
	135*a[2,2]**2*U[1,0]*U[1,2] + 288*xd1**2*U[2,2] - 270*xd1**2*a[1,1]*U[2,2] + 135*xd1**2*a[1,1]**2*U[2,2] - 270*xd1**2*a[2,2]*U[2,2] + 
	135*xd1**2*a[2,2]**2*U[2,2] + 45*a[1,2]**2*(U[1,1]**2 + 2*U[1,0]*U[1,2] + 6*xd1**2*U[2,2]) - 
	45*a[1,2]*(-2 + a[1,1] + a[2,2])*(U[0,3]*U[1,0] - U[1,1]*U[2,0] - 3*U[1,0]*U[2,1] - 3*xd1**2*(U[1,3] + U[3,1]))) - 48*xd1**4*U[4,0] + 
	90*xd1**4*a[1,1]*U[4,0] - 45*xd1**4*a[1,1]**2*U[4,0] - 45*xd1**4*a[1,2]**2*U[4,0] - 
	xd1*xd2*(64*U[0,2]*U[1,1] - 90*a[1,1]*U[0,2]*U[1,1] + 45*a[1,1]**2*U[0,2]*U[1,1] - 60*a[2,2]*U[0,2]*U[1,1] + 45*a[2,2]**2*U[0,2]*U[1,1] + 64*U[1,1]*U[2,0] - 
	60*a[1,1]*U[1,1]*U[2,0] + 45*a[1,1]**2*U[1,1]*U[2,0] - 90*a[2,2]*U[1,1]*U[2,0] + 45*a[2,2]**2*U[1,1]*U[2,0] + 192*U[1,0]*U[2,1] - 
	90*a[1,1]*U[1,0]*U[2,1] + 45*a[1,1]**2*U[1,0]*U[2,1] - 270*a[2,2]*U[1,0]*U[2,1] + 135*a[2,2]**2*U[1,0]*U[2,1] + 192*xd1**2*U[3,1] - 
	270*xd1**2*a[1,1]*U[3,1] + 135*xd1**2*a[1,1]**2*U[3,1] - 90*xd1**2*a[2,2]*U[3,1] + 45*xd1**2*a[2,2]**2*U[3,1] + 
	90*a[1,2]**2*(U[0,2]*U[1,1] + U[1,1]*U[2,0] + 2*U[1,0]*U[2,1] + 2*xd1**2*U[3,1]) + 
	15*a[1,2]*(3*(-2 + a[1,1] + a[2,2])*U[0,2]**2 + 2*(-5 + 3*a[1,1] + 3*a[2,2])*U[1,1]**2 + 2*U[0,2]*U[2,0] + 
	3*(-2 + a[1,1] + a[2,2])*(U[2,0]**2 + U[1,0]*(U[1,2] + 3*U[3,0]) + xd1**2*(3*U[2,2] + U[4,0])))))/720

	H4 = H2+h**4*H4diff

	return H0, H2, H4
	
	
	
	
def Imod(x,VJet,a,h):	

	# computation of modified angular momentum if U=1/2V(#1,#2) and the matrix coefficients A commute with a rotation matrix
	
	dx = (-x[4:]+8*x[3:-1]-8*x[1:-3]+x[:-4])/(12*h) 	# fourth oder finite differences
	nrm2 = np.sum(x[2:-2]**2,1)

	V1 = VJet[1](nrm2)
	V2 = VJet[2](nrm2)
	V3 = VJet[3](nrm2)
	V4 = VJet[4](nrm2)

	xd1 = dx[:,0]
	xd2 = dx[:,1]

	x1 = x[2:-2,0]
	x2 = x[2:-2,1]
	
	# I0

	I0 = -(x2*xd1) + x1*xd2


	# I2

	I2diff= (x1*(-12*xd1*a[1,2] + xd2*(8 + 3*a[1,1] - 9*a[2,2]))*V1 - 6*x1**3*xd1*a[1,2]*V2 + 6*x2**3*xd2*a[1,2]*V2 + 
	6*x1*x2**2*(xd1*a[1,2] + xd2*(a[1,1] - a[2,2]))*V2 + x2*
	((12*xd2*a[1,2] + xd1*(-8 + 9*a[1,1] - 3*a[2,2]))*V1 + 6*x1**2*(-(xd2*a[1,2]) + xd1*(a[1,1] - a[2,2]))*V2))/12.

	I2 = I0+h**2*I2diff

	# I4

	I4diff = (180*x2**5*xd2*a[1,2]*(-2 + a[1,1] + a[2,2])*(V2**2 + 3*V1*V3 + 2*xd2**2*V4) + 
	180*x1*x2**4*(-2 + a[1,1] + a[2,2])*(xd2*(a[1,1] - a[2,2])*(V2**2 + 3*V1*V3 + 2*xd2**2*V4) + xd1*a[1,2]*(V2**2 + 3*V1*V3 + 6*xd2**2*V4)) + 
	6*x1*x2**2*(2*(45*xd1**3*a[1,2]*(-2 + a[1,1] + a[2,2]) + 5*xd1*xd2**2*a[1,2]*(-34 + 21*a[1,1] + 21*a[2,2]) + 
	2*xd2**3*(-32 + 30*a[1,1]**2 + 95*a[2,2] - 45*a[2,2]**2 - 5*a[1,1]*(7 + 3*a[2,2])) + 
	xd1**2*xd2*(128 + 135*a[1,1]**2 + 50*a[2,2] - 75*a[2,2]**2 + 10*a[1,1]*(-29 + 6*a[2,2])))*V3 + 
	V1*(60*xd1*a[1,2]*(-1 + a[1,1] + a[2,2])*V2 + xd2*(-64 + 135*a[1,1]**2 + 240*a[2,2] - 165*a[2,2]**2 - 30*a[1,1]*(4 + a[2,2]))*V2 + 
	90*x1**2*xd2*(-2*a[1,1] + a[1,1]**2 - (-2 + a[2,2])*a[2,2])*V3) + 
	30*x1**2*(-2 + a[1,1] + a[2,2])*(2*xd1**3*a[1,2]*V4 - 6*xd1*xd2**2*a[1,2]*V4 + xd2*(a[1,1] - a[2,2])*(V2**2 + 6*xd1**2*V4))) + 
	6*x2**3*(2*xd2*(45*xd1**2*a[1,2]*(-2 + a[1,1] + a[2,2]) + 5*xd2**2*a[1,2]*(-34 + 21*a[1,1] + 21*a[2,2]) + 
	xd1*xd2*(64 + 45*a[1,1]**2 - 20*a[2,2] - 15*a[2,2]**2 + 10*a[1,1]*(-10 + 3*a[2,2])))*V3 + 
	V1*(20*xd2*a[1,2]*(-11 + 9*a[1,1] + 9*a[2,2])*V2 + xd1*(64 + 45*a[1,1]**2 - 20*a[2,2] - 15*a[2,2]**2 + 10*a[1,1]*(-10 + 3*a[2,2]))*V2 + 
	90*x1**2*xd1*(-2*a[1,1] + a[1,1]**2 - (-2 + a[2,2])*a[2,2])*V3) + 
	30*x1**2*(-2 + a[1,1] + a[2,2])*(6*xd1**2*xd2*a[1,2]*V4 - 2*xd2**3*a[1,2]*V4 + xd1*(a[1,1] - a[2,2])*(V2**2 + 6*xd2**2*V4))) - 
	x1*(-6*xd2**3*(-64 + 15*a[1,1]**2 + a[1,1]*(20 - 30*a[2,2]) + 100*a[2,2] - 45*a[2,2]**2)*V2 + 
	60*xd1*xd2**2*a[1,2]*((-10 + 3*a[1,1] + 3*a[2,2])*V2 + 9*x1**2*(-2 + a[1,1] + a[2,2])*V3) + 
	xd2*((64 - 45*a[1,1]**2 - 90*a[1,2]**2 + 45*a[2,2] + 45*a[2,2]**2 + 15*a[1,1]*(-13 + 6*a[2,2]))*V1**2 - 
	6*x1**2*(-64 + 15*a[1,1]**2 + a[1,1]*(20 - 30*a[2,2]) + 100*a[2,2] - 45*a[2,2]**2)*V1*V2 - 
	6*xd1**2*((-64 + 45*a[1,1]**2 + a[1,1]*(40 - 30*a[2,2]) + 80*a[2,2] - 75*a[2,2]**2)*V2 + 
	2*x1**2*(-64 + 15*a[1,1]**2 + a[1,1]*(20 - 30*a[2,2]) + 100*a[2,2] - 45*a[2,2]**2)*V3)) + 
	30*xd1*a[1,2]*((8 + 3*a[1,1] + 3*a[2,2])*V1**2 + 6*x1**4*(-2 + a[1,1] + a[2,2])*V2**2 + 
	2*V1*(2*x1**2*(-11 + 9*a[1,1] + 9*a[2,2])*V2 + 9*x1**4*(-2 + a[1,1] + a[2,2])*V3) + 
	2*xd1**2*((-6 + 9*a[1,1] + 9*a[2,2])*V2 + x1**2*(-34 + 21*a[1,1] + 21*a[2,2])*V3 + 6*x1**4*(-2 + a[1,1] + a[2,2])*V4))) + 
	x2*((30*xd2*a[1,2]*(8 + 3*a[1,1] + 3*a[2,2]) + xd1*(64 + 45*a[1,1]**2 - 90*a[1,2]**2 - 195*a[2,2] - 45*a[2,2]**2 + 45*a[1,1]*(1 + 2*a[2,2])))*V1**2 + 
	6*x1**2*V1*(-30*xd2*a[1,2]*(2*(-1 + a[1,1] + a[2,2])*V2 + 3*x1**2*(-2 + a[1,1] + a[2,2])*V3) + 
	xd1*((64 + 165*a[1,1]**2 + 30*a[1,1]*(-8 + a[2,2]) + 120*a[2,2] - 135*a[2,2]**2)*V2 + 90*x1**2*(-2*a[1,1] + a[1,1]**2 - (-2 + a[2,2])*a[2,2])*V3))
	+ 6*(-30*xd2*a[1,2]*(x1**4*(-2 + a[1,1] + a[2,2])*V2**2 + xd2**2*((2 - 3*a[1,1] - 3*a[2,2])*V2 + 3*x1**2*(-2 + a[1,1] + a[2,2])*V3)) + 
	xd1*(30*x1**4*(-2*a[1,1] + a[1,1]**2 - (-2 + a[2,2])*a[2,2])*V2**2 + 
	xd2**2*((64 + 75*a[1,1]**2 - 40*a[2,2] - 45*a[2,2]**2 + 10*a[1,1]*(-8 + 3*a[2,2]))*V2 + 
	2*x1**2*(-128 + 75*a[1,1]**2 + 290*a[2,2] - 135*a[2,2]**2 - 10*a[1,1]*(5 + 6*a[2,2]))*V3)) + 
	10*xd1**2*xd2*a[1,2]*((-10 + 3*a[1,1] + 3*a[2,2])*V2 - x1**2*(-34 + 21*a[1,1] + 21*a[2,2])*V3 - 18*x1**4*(-2 + a[1,1] + a[2,2])*V4) + 
	xd1**3*((64 + 45*a[1,1]**2 - 20*a[2,2] - 15*a[2,2]**2 + 10*a[1,1]*(-10 + 3*a[2,2]))*V2 + 
	4*x1**2*(32 + 45*a[1,1]**2 + 35*a[2,2] - 30*a[2,2]**2 + 5*a[1,1]*(-19 + 3*a[2,2]))*V3 + 
	60*x1**4*(-2*a[1,1] + a[1,1]**2 - (-2 + a[2,2])*a[2,2])*V4))))/720.
	
	I4 = I2+h**4*I4diff
	
	return I0, I2, I4
